name: Build Docker Image

on:
  push:
    branches:
      - "main"
      - "production"
      - "staging"
    paths:
      - ".github/**"
      - "pages/**"
      - "public/**"
      - "layouts/**"
      - "components/**"
      - "assets/**"
      - "shared/**"
      - "server/**"
      - "Dockerfile"
      - "*.vue"
      - "package*.json"
      - "nuxt.config.ts"

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Determine environment and set image tag
        id: set_image_tag
        run: |
          case "${GITHUB_REF}" in
            "refs/heads/production")
              ENVIRONMENT="prod"
              ;;
            "refs/heads/staging")
              ENVIRONMENT="staging"
              ;;
            "refs/heads/main")
              ENVIRONMENT="development"
              ;;
            *)
              echo "Unsupported branch. Exiting."
              exit 1
              ;;
          esac
          COMMIT_HASH="${GITHUB_SHA}"
          IMAGE_TAG="${ENVIRONMENT}-${COMMIT_HASH}"
          LATEST_TAG="${ENVIRONMENT}-latest"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      - name: Build and push Docker images
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')

          echo "Building and pushing $REPO_NAME with tags ${{ env.IMAGE_TAG }} and ${{ env.LATEST_TAG }}"
          docker build -t ${{ env.REGISTRY }}/${REPO_NAME}:${{ env.IMAGE_TAG }} -t ${{ env.REGISTRY }}/${REPO_NAME}:${{ env.LATEST_TAG }} .
          docker push ${{ env.REGISTRY }}/${REPO_NAME}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${REPO_NAME}:${{ env.LATEST_TAG }}
